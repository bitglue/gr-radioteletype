'''utility program to generate lookup table for decoder'''

import sys

decode = {
    0b1010101011:  '\x00',    0b1011011011:  '\x01',
    0b1011101101:  '\x02',    0b1101110111:  '\x03',
    0b1011101011:  '\x04',    0b1101011111:  '\x05',
    0b1011101111:  '\x06',    0b1011111101:  '\x07',
    0b1011111111:  '\x08',    0b11101111:    '\x09',
    0b11101:       '\x0A',    0b1101101111:  '\x0B',
    0b1011011101:  '\x0C',    0b11111:       '\x0D',
    0b1101110101:  '\x0E',    0b1110101011:  '\x0F',
    0b1011110111:  '\x10',    0b1011110101:  '\x11',
    0b1110101101:  '\x12',    0b1110101111:  '\x13',
    0b1101011011:  '\x14',    0b1101101011:  '\x15',
    0b1101101101:  '\x16',    0b1101010111:  '\x17',
    0b1101111011:  '\x18',    0b1101111101:  '\x19',
    0b1110110111:  '\x1A',    0b1101010101:  '\x1B',
    0b1101011101:  '\x1C',    0b1110111011:  '\x1D',
    0b1011111011:  '\x1E',    0b1101111111:  '\x1F',
    0b1:           ' ',       0b111111111:   '!',
    0b101011111:   '"',       0b111110101:   '#',
    0b111011011:   '$',       0b1011010101:  '%',
    0b1010111011:  '&',       0b101111111:   '\'',
    0b11111011:    '(',       0b11110111:    ')',
    0b101101111:   '*',       0b111011111:   '+',
    0b1110101:     ',',       0b110101:      '-',
    0b1010111:     '.',       0b110101111:   '/',
    0b10110111:    '0',       0b10111101:    '1',
    0b11101101:    '2',       0b11111111:    '3',
    0b101110111:   '4',       0b101011011:   '5',
    0b101101011:   '6',       0b110101101:   '7',
    0b110101011:   '8',       0b110110111:   '9',
    0b11110101:    ':',       0b110111101:   ';',
    0b111101101:   '<',       0b1010101:     '=',
    0b111010111:   '>',       0b1010101111:  '?',
    0b1010111101:  '@',       0b1111101:     'A',
    0b11101011:    'B',       0b10101101:    'C',
    0b10110101:    'D',       0b1110111:     'E',
    0b11011011:    'F',       0b11111101:    'G',
    0b101010101:   'H',       0b1111111:     'I',
    0b111111101:   'J',       0b101111101:   'K',
    0b11010111:    'L',       0b10111011:    'M',
    0b11011101:    'N',       0b10101011:    'O',
    0b11010101:    'P',       0b111011101:   'Q',
    0b10101111:    'R',       0b1101111:     'S',
    0b1101101:     'T',       0b101010111:   'U',
    0b110110101:   'V',       0b101011101:   'W',
    0b101110101:   'X',       0b101111011:   'Y',
    0b1010101101:  'Z',       0b111110111:   '[',
    0b111101111:   '\\',      0b111111011:   ']',
    0b1010111111:  '^',       0b101101101:   '_',
    0b1011011111:  '`',       0b1011:        'a',
    0b1011111:     'b',       0b101111:      'c',
    0b101101:      'd',       0b11:          'e',
    0b111101:      'f',       0b1011011:     'g',
    0b101011:      'h',       0b1101:        'i',
    0b111101011:   'j',       0b10111111:    'k',
    0b11011:       'l',       0b111011:      'm',
    0b1111:        'n',       0b111:         'o',
    0b111111:      'p',       0b110111111:   'q',
    0b10101:       'r',       0b10111:       's',
    0b101:         't',       0b110111:      'u',
    0b1111011:     'v',       0b1101011:     'w',
    0b11011111:    'x',       0b1011101:     'y',
    0b111010101:   'z',       0b1010110111:  '{',
    0b110111011:   '|',       0b1010110101:  '}',
    0b1011010111:  '~',       0b1110110101:  '\x7F'}

encode = {v: k for k, v in decode.iteritems()}

for i in xrange(512):
    k = (i << 1) + 1
    c = decode.get(k, chr(255))
    sys.stdout.write('%r, ' % (c,))
print


def reverse_bits(b):
    bits = []
    while b:
        bits.append(b & 1)
        b >>= 1

    bits.reverse()
    out = 0
    while bits:
        out <<= 1
        out += bits.pop()

    return out


for character in map(chr, range(128)):
    sys.stdout.write('0x%x, ' % (reverse_bits(encode[character]),))
print
